/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * ImportShapeFrame.java
 *
 * Created on 28-lug-2011, 12.15.55
 */
package Tough2ViewerPRJ;

import java.awt.Color;
import java.awt.Component;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.vecmath.Color3f;

/**
 *
 * @author stebond
 */
public class ImportShapeFrame extends javax.swing.JFrame {

    /**
     * Creates new form ImportShapeFrame
     */
    public ImportShapeFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Import shapefile");

        jButton4.setText("add new ...");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ShapeFile", "Polyline Color"
            }
        ));
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);

        jButton1.setText("Load last");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButtonClose.setText("Close");
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(0, 346, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonClose)))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(86, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 219, Short.MAX_VALUE)
                .addComponent(jButtonClose)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(61, 61, 61)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(45, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:

        LoadShpFiles myShapeFrm = new LoadShpFiles();
        myShapeFrm.setVisible(true);

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        // TODO add your handling code here:
        int row = jTable3.getSelectedRow();
        int col = jTable3.getSelectedColumn();

        if (col == 1) {
            Color c = JColorChooser.showDialog(this, "Choose a color...", getBackground());
            if (c != null) {
                float r = (float) c.getRed();
                float g = (float) c.getGreen();
                float b = (float) c.getBlue();
                r = r / 255.0f;
                g = g / 255.0f;
                b = b / 255.0f;
                //iTough2Viewer.dataobj.set_ColorPolyShape(row, r, g, b);
                Tough2Viewer.dataobj.set_ColorPolyShape2(row, r, g, b);
                if (Tough2Viewer.tough2viewerGUI.VoronoiModel3D != null) {
                    //iTough2Viewer.tough2viewerGUI.VoronoiModel3D.repaint_shapes();
                    Tough2Viewer.tough2viewerGUI.VoronoiModel3D.repaint_shapes2();
                }

                int i = 1111;
            }
            coloracolonna1Tabella2();
        }

    }//GEN-LAST:event_jTable3MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //caricamento ultimi shape files...
        File file = new File("shape.ini");
        FileInputStream fis = null;
        BufferedInputStream bis = null;
        DataInputStream dis = null;
        String linea;
        int num_url = 0;
        try {
            fis = new FileInputStream(file);
            bis = new BufferedInputStream(fis);
            dis = new DataInputStream(bis);
            while (dis.available() != 0) {
                linea = (String) dis.readLine();
                //fare qualcosa,
            }
            fis.close();
            bis.close();
            dis.close();
        } catch (IOException e) {
            String error = "Warning: File IOException";
            JOptionPane.showMessageDialog(null, error);
            error = e.toString();
            JOptionPane.showMessageDialog(null, error);
            Tough2Viewer.toLogFile("Impossibile trovare il file url");
            return;

        }
        //da qui fare un ciclo per il caricamento e importazione in automatico degli shape files...

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButtonCloseActionPerformed
    void AggiornaTabella2() {
        String[] ShapeFileName = Tough2Viewer.dataobj.get_shapeFileNames2();
        int n_righe = jTable3.getRowCount();
        int n_colonne = jTable3.getColumnCount();
        String[] titoli = new String[]{"ShapeFileName", "PolyLine Color"};
        DefaultTableModel model = new DefaultTableModel();
        if (n_colonne < titoli.length) {
            model = new DefaultTableModel();
            model = (DefaultTableModel) jTable3.getModel();
            TableColumn col = new TableColumn(model.getColumnCount());
            // Ensure that auto-create is off
            if (jTable3.getAutoCreateColumnsFromModel()) {
                jTable3.setAutoCreateColumnsFromModel(false);
            }
        }
        for (int vColIndex = 0; vColIndex < titoli.length; vColIndex++) {
            jTable3.getColumnModel().getColumn(vColIndex).setHeaderValue(titoli[vColIndex]);
        }
        ///////////////////Riempire prima colonna

        int numerofile = ShapeFileName.length;
        if (n_righe < numerofile + 1) {
            model = new DefaultTableModel();
            model = (DefaultTableModel) jTable3.getModel();
            int delta = numerofile - n_righe;
            for (int vRowIndex = 0; vRowIndex < delta; vRowIndex++) {
                model.addRow(new Object[]{"v1"});
            }
        }
        n_righe = jTable3.getRowCount();
        n_colonne = jTable3.getColumnCount();
        if (jTable3.getAutoCreateColumnsFromModel()) {
            jTable3.setAutoCreateColumnsFromModel(false);
        }
        for (int vRowIndex = 0; vRowIndex < ShapeFileName.length; vRowIndex++) {
            String shapefilename = ShapeFileName[vRowIndex];
            jTable3.setValueAt(shapefilename, vRowIndex, 0);
        }

        coloracolonna1Tabella2();
    }

    public void coloracolonna1Tabella2() {
        jTable3.getColumnModel().getColumn(1).setCellRenderer(new DefaultTableCellRenderer() {
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                Component cell = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                Color3f colore[] = Tough2Viewer.dataobj.get_ShapesColor2();
                Color c;
                if (colore.length > row) {
                    c = new Color(colore[row].x, colore[row].y, colore[row].z);
                } else {
                    c = new Color(1.0f, 1.0f, 1.0f);
                }

                if (row < 0) {
                    cell.setBackground(c);
                } else {
                    cell.setBackground(c);
                }
                return cell;

            }
        });
    }

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButtonClose;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable3;
    // End of variables declaration//GEN-END:variables

}
