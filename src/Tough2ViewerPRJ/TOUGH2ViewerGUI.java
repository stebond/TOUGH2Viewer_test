/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Tough2ViewerPRJ;

import Tough2ViewerPRJ.MeshGen.MeshGenerator3D;
import java.io.File;
import java.lang.management.ManagementFactory;
import java.lang.management.MemoryMXBean;
import java.lang.management.MemoryUsage;
import java.rmi.RemoteException;
import javax.swing.JOptionPane;
import visad.VisADException;

/**
 *
 * @author stebond
 */
public class TOUGH2ViewerGUI extends javax.swing.JFrame {

    private AboutBoxFrame aboutBox;
    private InputBoxRegular inputBoxRegular;
    private InputBoxVoronoi inputBoxVoronoi;
    public VoronoiBlockModel3D VoronoiModel3D;
    public FluxModel3DArrow FluxModel3DWindowArrow;
    public OptionFrame1 OptionBoxWindow;
    public IsoSurface3D IsoSurface3D;
    public JContourFrm CountourPlot;
    public TestCube TestCubeFRM;
    public ImportShapeFrame importShape;
    public IsoSurfaceControlFrame myIsoFrame;
    public ScaleFrame ScaleFramewindow;
    public GetStatistics getStatisticWindow;
    public FlowVector2D flow2d;
    public BallaFrm balla;
    public InputBoxVoroPlusPlus voroplusplus;
    public VoroPlusPlus3D voro3D;
    public InputWellsFrm inputWellsBox;
    private static final int MEGABYTE = (1024 * 1024);
    public INCON_Generator INCON_Generator_frm;

    /**
     * Creates new form TOUGH2ViewerGUI
     */
    public TOUGH2ViewerGUI() {
        initComponents();

        jLabel12.setText("          ");
        jLabel13.setText("          ");
        jLabel14.setText("          ");
        jLabel15.setText("          ");
        jLabel16.setText("          ");
        jLabel17.setText("          ");
        jLabel18.setText("          ");
        jLabel21.setText("          ");
        jLabel22.setText("          ");
        jLabel24.setText("          ");
        jLabel26.setText("          ");
        jLabelInfo.setText("      ");
        File file = new File("path.ini");
        boolean exists = (file).exists();
        if (exists) {
            //ok, already launched
        } else {
            LicenseFrame a = new LicenseFrame(this);
            this.setEnabled(false);
        }
        Tough2Viewer.dataobj.read_tough2viewer_settings();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabelInfo = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemOpenStructuredGrid = new javax.swing.JMenuItem();
        jMenuItemOpenUnstructuredGrid = new javax.swing.JMenuItem();
        jMenuItemUnsctructuredVplusplus = new javax.swing.JMenuItem();
        jMenuItemImportSurphaceFile = new javax.swing.JMenuItem();
        jMenuItemImportWells = new javax.swing.JMenuItem();
        jMenuMeshGenerator = new javax.swing.JMenuItem();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenuView = new javax.swing.JMenu();
        jMenuItem3DBlocModel = new javax.swing.JMenuItem();
        jMenuItem3DFlowVector = new javax.swing.JMenuItem();
        jMenuItem3DIsoSurface = new javax.swing.JMenuItem();
        jMenuItem2DCountourPlot = new javax.swing.JMenuItem();
        jMenuItem2DFlowVector = new javax.swing.JMenuItem();
        jMenuStatistic = new javax.swing.JMenu();
        jMenuItemStatistic = new javax.swing.JMenuItem();
        jMenuBalla = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuTool = new javax.swing.JMenu();
        jMenuItemOption = new javax.swing.JMenuItem();
        jMenuItemColorScale = new javax.swing.JMenuItem();
        jMenuItemTestJava = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TOUGH2Viewer 2.0");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("File Information"));

        jLabel3.setText("n blocks=");

        jLabel4.setText("xmin=");

        jLabel5.setText("xmax=");

        jLabel6.setText("ymin=");

        jLabel7.setText("ymax=");

        jLabel8.setText("zmin=");

        jLabel9.setText("zmax=");

        jLabel12.setText("jLabel12");

        jLabel13.setText("jLabel13");

        jLabel14.setText("jLabel14");

        jLabel15.setText("jLabel15");

        jLabel16.setText("jLabel16");

        jLabel17.setText("jLabel17");

        jLabel18.setText("jLabel18");

        jLabel19.setText("FileName=");

        jLabel20.setText("Number of time steps=");

        jLabel21.setText("jLabel21");

        jLabel22.setText("jLabel22");

        jLabel23.setText("Grid type=");

        jLabel24.setText("jLabel24");

        jLabel25.setText("FilePath=");

        jLabel26.setText("jLabel26");

        jLabel27.setText("Nodes coordinates:");

        jLabelInfo.setText("Info:");
        jLabelInfo.setAutoscrolls(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel23)
                            .addComponent(jLabel25)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(157, 157, 157)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel26)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(65, 65, 65)
                                .addComponent(jLabel12))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel8))
                                .addGap(25, 25, 25)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel15))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel18))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel17)
                                            .addComponent(jLabel16)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel21))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel27))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelInfo)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel22))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel13)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel17)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel14))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21))
                .addGap(6, 6, 6)
                .addComponent(jLabelInfo))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 153));
        jLabel1.setText("University of Bologna");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
        );

        jMenuFile.setText("File");
        jMenuFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuFileActionPerformed(evt);
            }
        });

        jMenuItemOpenStructuredGrid.setText("Open structured grid...");
        jMenuItemOpenStructuredGrid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOpenStructuredGridActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemOpenStructuredGrid);

        jMenuItemOpenUnstructuredGrid.setText("Open unstructured grid...");
        jMenuItemOpenUnstructuredGrid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOpenUnstructuredGridActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemOpenUnstructuredGrid);

        jMenuItemUnsctructuredVplusplus.setText("Open unstructured V++ grid...");
        jMenuItemUnsctructuredVplusplus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemUnsctructuredVplusplusActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemUnsctructuredVplusplus);

        jMenuItemImportSurphaceFile.setText("Import Surface File...");
        jMenuItemImportSurphaceFile.setEnabled(false);
        jMenuItemImportSurphaceFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemImportSurphaceFileActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemImportSurphaceFile);

        jMenuItemImportWells.setText("Import wells...");
        jMenuItemImportWells.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemImportWellsActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemImportWells);

        jMenuMeshGenerator.setText("Mesh Generator...");
        jMenuMeshGenerator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuMeshGeneratorActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuMeshGenerator);

        jMenuItemExit.setText("Exit");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemExit);

        jMenuBar1.add(jMenuFile);

        jMenuView.setText("View");

        jMenuItem3DBlocModel.setText("3D Block model");
        jMenuItem3DBlocModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3DBlocModelActionPerformed(evt);
            }
        });
        jMenuView.add(jMenuItem3DBlocModel);

        jMenuItem3DFlowVector.setText("3D Flow vector");
        jMenuItem3DFlowVector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3DFlowVectorActionPerformed(evt);
            }
        });
        jMenuView.add(jMenuItem3DFlowVector);

        jMenuItem3DIsoSurface.setText("3D Iso Surface");
        jMenuItem3DIsoSurface.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3DIsoSurfaceActionPerformed(evt);
            }
        });
        jMenuView.add(jMenuItem3DIsoSurface);

        jMenuItem2DCountourPlot.setText("2D Contour plot");
        jMenuItem2DCountourPlot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2DCountourPlotActionPerformed(evt);
            }
        });
        jMenuView.add(jMenuItem2DCountourPlot);

        jMenuItem2DFlowVector.setText("2D Flow Vector");
        jMenuItem2DFlowVector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2DFlowVectorActionPerformed(evt);
            }
        });
        jMenuView.add(jMenuItem2DFlowVector);

        jMenuBar1.add(jMenuView);

        jMenuStatistic.setText("Analysis");

        jMenuItemStatistic.setText("Statistics");
        jMenuItemStatistic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemStatisticActionPerformed(evt);
            }
        });
        jMenuStatistic.add(jMenuItemStatistic);

        jMenuBalla.setText("Heat and Mass Balance");
        jMenuBalla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuBallaActionPerformed(evt);
            }
        });
        jMenuStatistic.add(jMenuBalla);

        jMenuItem2.setText("Plot variables");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenuStatistic.add(jMenuItem2);

        jMenuBar1.add(jMenuStatistic);

        jMenuTool.setText("Tools");

        jMenuItemOption.setText("Options");
        jMenuItemOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOptionActionPerformed(evt);
            }
        });
        jMenuTool.add(jMenuItemOption);

        jMenuItemColorScale.setText("Color scale");
        jMenuItemColorScale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemColorScaleActionPerformed(evt);
            }
        });
        jMenuTool.add(jMenuItemColorScale);

        jMenuItemTestJava.setText("Test Java3D");
        jMenuItemTestJava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemTestJavaActionPerformed(evt);
            }
        });
        jMenuTool.add(jMenuItemTestJava);

        jMenuItem1.setText("Create INCON");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenuTool.add(jMenuItem1);

        jMenuBar1.add(jMenuTool);

        jMenu1.setText("?");

        jMenuItemAbout.setText("About");
        jMenuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAboutActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemAbout);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(120, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //my code:

    public void showAboutBox() {
        if (aboutBox == null) {

            aboutBox = new AboutBoxFrame();

        }
        aboutBox.setVisible(true);
    }

    public void showInputBoxWells() {
        if (inputWellsBox == null) {

            inputWellsBox = new InputWellsFrm();

        }
        inputWellsBox.setVisible(true);
    }

    public void showModel3DVoronoi() {
        if (Tough2Viewer.dataobj.get_dataLoaded()) {
            if (VoronoiModel3D == null) {
                MemoryMXBean memoryBean = ManagementFactory.getMemoryMXBean();

                try {
                    VoronoiModel3D = new VoronoiBlockModel3D();
                    VoronoiModel3D.setVisible(true);
                } catch (Exception ex) {
                    String error = "VoronoiBlockModel3D error!!";
                    JOptionPane.showMessageDialog(null, error);
                    error = ex.toString();
                    JOptionPane.showMessageDialog(null, error);
                } catch (OutOfMemoryError ex) {
                    MemoryUsage heapUsage = memoryBean.getHeapMemoryUsage();
                    long maxMemory = heapUsage.getMax() / MEGABYTE;
                    long usedMemory = heapUsage.getUsed() / MEGABYTE;
                    String error = "VoronoiBlockModel3D view error!!";
                    JOptionPane.showMessageDialog(null, error);
                    error = ex.toString();
                    JOptionPane.showMessageDialog(null, error);
                    error = "Memory Use :" + usedMemory + "M/" + maxMemory + "M";
                    JOptionPane.showMessageDialog(null, error);
                }

            } else {
                VoronoiModel3D.setVisible(true);
            }
        }
    }

    public void ReBuild3DVoronoi() {
        VoronoiModel3D = new VoronoiBlockModel3D();
        VoronoiModel3D.setVisible(true);
    }

    public void showOptionBox() {
        if (Tough2Viewer.dataobj.get_dataLoaded()) {
            if (OptionBoxWindow == null) {
                OptionBoxWindow = new OptionFrame1();

            }
            OptionBoxWindow.setVisible(true);
        }
    }

    public void showTestJava3D() {
        if (TestCubeFRM == null) {

            TestCubeFRM = new TestCube();

        }
        TestCubeFRM.setVisible(true);
    }

    public void showFluxModel3DArrow() {
        if (Tough2Viewer.dataobj.get_dataLoaded()) {
            if (FluxModel3DWindowArrow == null) {

                FluxModel3DWindowArrow = new FluxModel3DArrow();

            }
            FluxModel3DWindowArrow.setVisible(true);
        }
    }

    public void showInputBoxRegular() {
        if (inputBoxRegular == null) {

            inputBoxRegular = new InputBoxRegular();

        }
        inputBoxRegular.setVisible(true);
    }

    public void showInputBoxVoroplusplus() {
        if (voroplusplus == null) {

            voroplusplus = new InputBoxVoroPlusPlus();

        }
        voroplusplus.setVisible(true);
    }

    public void showInputBoxVoronoi() {
        if (inputBoxVoronoi == null) {

            inputBoxVoronoi = new InputBoxVoronoi();

        }
        inputBoxVoronoi.setVisible(true);
    }

    public void showIsoSurface3D() throws RemoteException, VisADException {
        if (Tough2Viewer.dataobj.get_dataLoaded()) {
            if (myIsoFrame == null) {

                myIsoFrame = new IsoSurfaceControlFrame();

            }
            myIsoFrame.setVisible(true);
        }
    }

    public void showCountourPlot() {
        if (CountourPlot == null) {

            CountourPlot = new JContourFrm();

        }
        CountourPlot.setVisible(true);
    }

    public void show2DFlowVector() {
        if (flow2d == null) {

            flow2d = new FlowVector2D();

        }
        flow2d.setVisible(true);
    }

    public void showBalla() {
        if (balla == null) {

            balla = new BallaFrm();

        }
        balla.setVisible(true);
    }

    public void UpdateInfoLabel(String info) {
        info = "Info: " + info;
        jLabelInfo.setText(info);
    }

    public void UpdateFileInformation() {
        jLabel12.setText(Integer.toString(Tough2Viewer.dataobj.get_nxyz()));
        jLabel13.setText(Float.toString(Tough2Viewer.dataobj.get_xmin()));
        jLabel14.setText(Float.toString(Tough2Viewer.dataobj.get_ymin()));
        jLabel15.setText(Float.toString(Tough2Viewer.dataobj.get_zmin()));
        jLabel16.setText(Float.toString(Tough2Viewer.dataobj.get_xmax()));
        jLabel17.setText(Float.toString(Tough2Viewer.dataobj.get_ymax()));
        jLabel18.setText(Float.toString(Tough2Viewer.dataobj.get_zmax()));
        jLabel21.setText(Integer.toString(Tough2Viewer.dataobj.get_TimeSteps()));
        jLabel22.setText(Tough2Viewer.dataobj.get_DataFileName());
        jLabel22.setText(Tough2Viewer.dataobj.get_DataFileName());
        int i = Tough2Viewer.dataobj.ID_grid_type;
        String gridtype = Tough2Viewer.dataobj.getGridType();
        int dim = gridtype.length();
        gridtype = Integer.toString(dim) + "D - " + gridtype + " - " + Tough2Viewer.dataobj.grid_type[i];
        Tough2Viewer.tough2viewerGUI.jLabel24.setText(gridtype);
        Tough2Viewer.tough2viewerGUI.jLabel26.setText(Tough2Viewer.dataobj.get_DataFilePath());
        if (Tough2Viewer.dataobj.get_dataLoaded()) {
            Tough2Viewer.tough2viewerGUI.jMenuItemImportSurphaceFile.setEnabled(true);
            Tough2Viewer.tough2viewerGUI.jMenuItemImportSurphaceFile.setEnabled(true);
            Tough2Viewer.tough2viewerGUI.jMenuView.setEnabled(true);
        }

        if (Tough2Viewer.dataobj.gridType.contentEquals("xyz")) {
            Tough2Viewer.tough2viewerGUI.jMenuItem2DFlowVector.setEnabled(false);
        }
        if (Tough2Viewer.dataobj.gridType.length() < 3) {
            Tough2Viewer.tough2viewerGUI.jMenuItem3DIsoSurface.setEnabled(false);
        }
        if (Tough2Viewer.dataobj.gridType.length() < 2) {
            Tough2Viewer.tough2viewerGUI.jMenuItem2DCountourPlot.setEnabled(false);
            Tough2Viewer.tough2viewerGUI.jMenuItem2DFlowVector.setEnabled(false);
        }
        if (Tough2Viewer.dataobj.FluxFound) {
            Tough2Viewer.tough2viewerGUI.jMenuItem3DFlowVector.setEnabled(true);
        } else {
            Tough2Viewer.tough2viewerGUI.jMenuItem3DFlowVector.setEnabled(false);
        }

    }

    private void jMenuItemStatisticActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemStatisticActionPerformed
        if (Tough2Viewer.dataobj.get_dataLoaded()) {

            if (getStatisticWindow == null) {

                getStatisticWindow = new GetStatistics();

            }
            getStatisticWindow.setVisible(true);
        }
    }//GEN-LAST:event_jMenuItemStatisticActionPerformed

    private void jMenuItemOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOptionActionPerformed
        showOptionBox();
    }//GEN-LAST:event_jMenuItemOptionActionPerformed

    private void jMenuItemOpenStructuredGridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOpenStructuredGridActionPerformed
        showInputBoxRegular();
    }//GEN-LAST:event_jMenuItemOpenStructuredGridActionPerformed

    private void jMenuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAboutActionPerformed
        showAboutBox();
    }//GEN-LAST:event_jMenuItemAboutActionPerformed

    private void jMenuItemTestJavaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemTestJavaActionPerformed
        showTestJava3D();
    }//GEN-LAST:event_jMenuItemTestJavaActionPerformed

    private void jMenuItem3DBlocModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3DBlocModelActionPerformed
        showModel3DVoronoi();
    }//GEN-LAST:event_jMenuItem3DBlocModelActionPerformed

    private void jMenuFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuFileActionPerformed

    }//GEN-LAST:event_jMenuFileActionPerformed

    private void jMenuItemOpenUnstructuredGridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOpenUnstructuredGridActionPerformed
        showInputBoxVoronoi();
    }//GEN-LAST:event_jMenuItemOpenUnstructuredGridActionPerformed

    private void jMenuItemImportSurphaceFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemImportSurphaceFileActionPerformed
        if (importShape == null) {

            importShape = new ImportShapeFrame();

        }
        importShape.setVisible(true);
    }//GEN-LAST:event_jMenuItemImportSurphaceFileActionPerformed

    private void jMenuItem3DIsoSurfaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3DIsoSurfaceActionPerformed
        try {
            showIsoSurface3D();
        } catch (Exception e) {

        }
    }//GEN-LAST:event_jMenuItem3DIsoSurfaceActionPerformed

    private void jMenuItem3DFlowVectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3DFlowVectorActionPerformed
        showFluxModel3DArrow();
    }//GEN-LAST:event_jMenuItem3DFlowVectorActionPerformed

    private void jMenuItemColorScaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemColorScaleActionPerformed
        if (Tough2Viewer.dataobj.get_dataLoaded()) {
            if (ScaleFramewindow == null) {

                ScaleFramewindow = new ScaleFrame();

            }
            ScaleFramewindow.setVisible(true);
        }
    }//GEN-LAST:event_jMenuItemColorScaleActionPerformed

    private void jMenuItem2DCountourPlotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2DCountourPlotActionPerformed

        showCountourPlot();
    }//GEN-LAST:event_jMenuItem2DCountourPlotActionPerformed

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        System.exit(1);
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void jMenuItem2DFlowVectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2DFlowVectorActionPerformed
        show2DFlowVector();
    }//GEN-LAST:event_jMenuItem2DFlowVectorActionPerformed

    private void jMenuBallaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuBallaActionPerformed
        showBalla();
    }//GEN-LAST:event_jMenuBallaActionPerformed

    private void jMenuItemUnsctructuredVplusplusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemUnsctructuredVplusplusActionPerformed
        showInputBoxVoroplusplus();
    }//GEN-LAST:event_jMenuItemUnsctructuredVplusplusActionPerformed

    private void jMenuItemImportWellsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemImportWellsActionPerformed
        showInputBoxWells();        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemImportWellsActionPerformed

    private void jMenuMeshGeneratorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuMeshGeneratorActionPerformed
        MeshGenerator3D pipppo = new MeshGenerator3D();
        pipppo.setVisible(true);

    }//GEN-LAST:event_jMenuMeshGeneratorActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if (Tough2Viewer.dataobj.get_dataLoaded()) {
            if (Tough2Viewer.tough2viewerGUI.INCON_Generator_frm != null) {
                Tough2Viewer.tough2viewerGUI.INCON_Generator_frm.setVisible(true);
            } else {
                Tough2Viewer.tough2viewerGUI.INCON_Generator_frm = new INCON_Generator();
                Tough2Viewer.tough2viewerGUI.INCON_Generator_frm.setVisible(true);
            }
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        PlotXYvari plotVAR = new PlotXYvari();
        plotVAR.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TOUGH2ViewerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TOUGH2ViewerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TOUGH2ViewerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TOUGH2ViewerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new TOUGH2ViewerGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelInfo;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuBalla;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem2DCountourPlot;
    private javax.swing.JMenuItem jMenuItem2DFlowVector;
    private javax.swing.JMenuItem jMenuItem3DBlocModel;
    private javax.swing.JMenuItem jMenuItem3DFlowVector;
    private javax.swing.JMenuItem jMenuItem3DIsoSurface;
    private javax.swing.JMenuItem jMenuItemAbout;
    private javax.swing.JMenuItem jMenuItemColorScale;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemImportSurphaceFile;
    private javax.swing.JMenuItem jMenuItemImportWells;
    private javax.swing.JMenuItem jMenuItemOpenStructuredGrid;
    private javax.swing.JMenuItem jMenuItemOpenUnstructuredGrid;
    private javax.swing.JMenuItem jMenuItemOption;
    private javax.swing.JMenuItem jMenuItemStatistic;
    private javax.swing.JMenuItem jMenuItemTestJava;
    private javax.swing.JMenuItem jMenuItemUnsctructuredVplusplus;
    private javax.swing.JMenuItem jMenuMeshGenerator;
    private javax.swing.JMenu jMenuStatistic;
    private javax.swing.JMenu jMenuTool;
    private javax.swing.JMenu jMenuView;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
